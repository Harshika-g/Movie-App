{"version":3,"sources":["UserComponent.js","EditForm.js","actions/UserActions.js","actions/types.js","UserForm.js","App.js","serviceWorker.js","reducers/UsersReducers.js","reducers/index.js","store.js","index.js"],"names":["UserComponent","_this$props","this","props","avatar","showModal","likeClick","deleteUser","filled","like","website","concat","react_default","a","createElement","card","style","margin","cover","className","alt","src","username","actions","icon","type","theme","color","twoToneColor","onClick","name","email","phone","Component","RegistrationForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nameChangehandler","userId","e","setState","target","value","userOriginalId","editUser","objectSpread","state","emailChangehandler","numberChangehandler","websiteChangehandler","_this$props$userData","userData","id","getFieldDecorator","form","es_form","assign","labelCol","xs","span","sm","wrapperCol","onSubmit","handleSubmit","Item","label","initialValue","rules","required","message","whitespace","input","onChange","width","React","EditForm","Form","create","connect","users","allUsers","user","dispatch","payload","UserForm","handleOk","handleCancel","modal","title","visible","mask","maskClosable","onOk","onCancel","src_EditForm","App","_","forEach","obj","formData","updateState","_this$props$changedUs","changedUser","length","test","filtered","filter","error","_this2","fetch","method","then","response","json","result","edited","_this3","i","push","key","col","md","lg","xl","src_UserComponent","src_UserForm","fetchUsers","Boolean","window","location","hostname","match","getInitialState","combineReducers","arguments","undefined","action","console","log","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","apply","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e27019d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon } from 'antd';\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\n\nclass UserComponent extends Component {\n\n  render() {\n    const { avatar, showModal, likeClick, deleteUser } = this.props;\n    const filled = avatar.like ? 'filled' : 'outlined';\n    const website = `http://${avatar.website}`;\n    return(\n      <Card style={{ margin: 15 }}\n        cover={<div className = \"cardheaderImage\"><img alt=\"example\" className = 'imageContent' src={`https://avatars.dicebear.com/v2/avataaars/${avatar.username}.svg?options[mood][]=happy`} /></div>}\n        actions={[<Icon type=\"heart\" theme={filled} style = {{ color: '#eb2f96' }} twoToneColor=\"#eb2f96\" onClick = {likeClick(avatar)} className = 'bottomIcon'/>, <Icon type=\"edit\" className = 'bottomIcon' onClick = {showModal(avatar)}/>, <Icon type=\"delete\" className = 'bottomIcon' onClick = {deleteUser(avatar.name)}/>]}>\n        <h3>{avatar.name}</h3>\n        <div>\n          <Icon type=\"mail\" className = 'iconStyle'/>\n          <p>{avatar.email}</p>\n        </div>\n        <div>\n          <Icon type=\"phone\" className = 'iconStyle'/>\n          <p>{avatar.phone}</p>\n        </div>\n        <div>\n          <Icon type=\"global\" className = 'iconStyle'/>\n          <p>{website}</p>\n        </div>\n      </Card>\n    )\n  }\n}\nexport default UserComponent;\n","import React from 'react';\nimport { editUser } from './actions/UserActions';\nimport { connect } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport {\n  Form, Input,\n} from 'antd';\n\n\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n    const { name, email, phone, website, id } = this.props.userData;\n    this.state = {\n      name,\n      email,\n      phone,\n      website,\n      userOriginalId: id,\n    }\n  }\n\n  nameChangehandler = (userId) => (e) => {\n    this.setState({\n      name: e.target.value,\n      userOriginalId: userId\n    });\n    this.props.editUser({...this.state, name: e.target.value});\n  }\n\n  emailChangehandler = (userId) => (e) => {\n    this.setState({\n      email: e.target.value,\n      userOriginalId: userId\n    });\n    this.props.editUser({...this.state, email: e.target.value});\n  }\n\n  numberChangehandler = (userId) => (e) => {\n    this.setState({\n      phone: e.target.value,\n      userOriginalId: userId\n    });\n    this.props.editUser({...this.state, phone: e.target.value});\n  }\n\n  websiteChangehandler = (userId) => (e) => {\n    this.setState({\n      website: e.target.value,\n      userOriginalId: userId\n    });\n    this.props.editUser({...this.state, website: e.target.value});\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { userData } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n      <Form.Item\n        label={(\n          <span>\n            Name&nbsp;\n          </span>\n        )}\n      >\n        {getFieldDecorator('nickname', {\n          initialValue: [userData.name],\n          rules: [{ required: true, message: 'This field is required', whitespace: true }],\n        })(\n          <Input onChange = {this.nameChangehandler(userData.id)}/>\n        )}\n      </Form.Item>\n        <Form.Item\n          label=\"E-mail\"\n        >\n          {getFieldDecorator('email', {\n            initialValue: [userData.email],\n            rules: [{\n              type: 'email', message: 'The input is not valid E-mail!',\n            }, {\n              required: true, message: 'This field is required',\n            }],\n          })(\n            <Input onChange = {this.emailChangehandler(userData.id)}/>\n          )}\n        </Form.Item>\n        <Form.Item\n          label=\"Phone Number\"\n        >\n          {getFieldDecorator('phone', {\n            initialValue: [userData.phone],\n            rules: [{ required: true, message: 'This field is required' }],\n          })(\n            <Input style={{ width: '100%' }} onChange = {this.numberChangehandler(userData.id)}/>\n          )}\n        </Form.Item>\n        <Form.Item\n          label=\"Website\"\n        >\n          {getFieldDecorator('website', {\n            initialValue: [userData.website],\n            rules: [{ required: true, message: 'This field is required' }],\n          })(\n              <Input onChange = {this.websiteChangehandler(userData.id)}/>\n          )}\n        </Form.Item>\n      </Form>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  if(state.users.allUsers) {\n    return state.users;\n  } else {\n    return {}\n  }\n}\n\nconst EditForm = Form.create({ name: 'register' })(RegistrationForm);\nexport default connect(mapStateToProps, { editUser })(EditForm);\n","import { Fetch_Users, Update_Users, Edit_User }  from './types';\n\nexport const fetchUsers = () => (dispatch) => {\n  fetch('https://jsonplaceholder.typicode.com/users', { method: 'GET' })\n    .then(response => response.json())\n    .then(users => dispatch({\n      type: Fetch_Users,\n      payload: users\n    }));\n}\n\nexport const updateUsers = (user) => (dispatch) => {\n  dispatch({\n    type: Update_Users,\n    payload: user,\n  })\n}\n\nexport const editUser = (user) => (dispatch) => {\n  dispatch({\n    type: Edit_User,\n    payload: user,\n  })\n}\n","export const Fetch_Users = 'Fetch_Users';\n\nexport const Update_Users = 'Update_Users';\n\nexport const Edit_User = 'Edit_User';\n","import React, { Component } from 'react';\nimport EditForm from './EditForm'\nimport { Modal } from 'antd';\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nclass UserForm extends Component {\n  render() {\n    const { handleOk, handleCancel, userData } = this.props;\n    const masked = true;\n    const maskClosable = true;\n    return(\n      <Modal\n        title=\"Basic Modal\"\n        visible={userData.visible}\n        mask = {masked}\n        maskClosable = {maskClosable}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n      <EditForm userData = {userData}/>\n    </Modal>\n    )\n  }\n}\n\nexport default UserForm;\n","import React, { Component } from 'react';\nimport { fetchUsers } from './actions/UserActions';\nimport { connect } from 'react-redux';\nimport UserComponent from './UserComponent';\nimport UserForm from './UserForm';\nimport _ from 'lodash';\nimport { Spin, Col } from 'antd';\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      users: [],\n    }\n  }\n\n  updateState(allUsers) {\n    this.setState({\n      users: allUsers\n    });\n  }\n\n  showModal = user => e => {\n    _.forEach(this.state.users, (obj) => {\n      if(obj === user) {\n        obj.formData.visible = true;\n      }\n    });\n    this.updateState(this.state.users);\n  }\n\n  handleOk = (e) => {\n    const { name, email, phone, website, userOriginalId } = this.props.changedUser;\n    var re = /\\S+@\\S+\\.\\S+/;\n    if (name.length <= 0 || email.length <=0 || phone.length <=0 || website.length <=0 || !re.test(email)) {\n      return;\n    }\n    _.forEach(this.state.users, (obj) => {\n      if(obj.id === userOriginalId) {\n        obj.formData.visible = false;\n        obj.name = name;\n        obj.email = email;\n        obj.phone = phone;\n        obj.website = website;\n      }\n    });\n    this.updateState(this.state.users);\n  }\n\n  handleCancel = (e) => {\n    _.forEach(this.state.users, (obj) => {\n      obj.formData.visible = false;\n    });\n    this.updateState(this.state.users);\n  }\n\n  deleteUser = user => e => {\n    const filtered = _.filter(this.state.users, (obj) => {\n      return obj.name !== user;\n    });\n    this.updateState(filtered);\n  }\n\n  likeClick = (user) => e => {\n    _.forEach(this.state.users, (obj) => {\n      if(obj === user) {\n        obj.like = !obj.like;\n      }\n    });\n    this.updateState(this.state.users);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users', { method: 'GET' })\n      .then(response => response.json())\n      .then((result) => {\n          _.forEach(result, (obj) => {\n            obj.like = false;\n            obj.edited = false;\n            obj.formData = {\n              name: obj.name,\n              phone: obj.phone,\n              email: obj.email,\n              website: obj.website,\n              visible: false,\n              id: obj.id\n            }\n          });\n          this.setState({\n            users: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    if (this.state.error || this.state.users.length <= 0) {\n      return (\n        <div className = \"spinner\">\n          <div className = \"bounce1\"></div>\n          <div className = \"bounce2\"></div>\n          <div className = \"bounce3\"></div>\n        </div>\n      );\n    } else {\n      let users = [];\n      _.forEach(this.state.users, (user, i) => {\n        users.push(\n          <div key = {`div_${i}`}>\n          <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 8 }} lg={{ span: 8 }} xl={{ span: 6 }} key = {`div_${i}`} className = 'userCss'>\n            <UserComponent avatar = {user} deleteUser = {this.deleteUser} likeClick = {this.likeClick} showModal = {this.showModal}/>\n          </Col>\n          <UserForm handleOk = {this.handleOk} handleCancel = {this.handleCancel} visible = {this.state.visible} userData = {user.formData}/>\n        </div>)\n      })\n        return (\n          <div>\n            {users}\n          </div>\n        );\n      }\n    }\n}\n\nconst mapStateToProps = (state) => {\n  if(state.users) {\n    return state.users;\n  } else {\n    return {}\n  }\n}\n\nexport default connect(mapStateToProps, { fetchUsers })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Fetch_Users, Update_Users, Edit_User } from '../actions/types';\n\nconst getInitialState = {};\n\nexport default function(state = getInitialState, action) {\n  switch (action.type) {\n    case Fetch_Users:\n    console.log('n jjgf');\n      return {\n        ...state,\n        allUsers: action.payload,\n        changedUser: {}\n      }\n      break;\n    case Update_Users:\n      return {\n        ...state,\n        allUsers: action.payload\n      }\n      break;\n    case Edit_User:\n      return {\n        ...state,\n        changedUser: action.payload\n      }\n      break;\n    default:\n     return state;\n      break;\n  }\n}\n","import { combineReducers } from 'redux';\nimport UsersReducers from './UsersReducers';\n\nexport default combineReducers({\n  users: UsersReducers\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleWare));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}